#Main
bot_is_ready: "The bot is ready"
processing: "Processing..."
no_desc: "no_desc"
indev: "not done yet"
denied: "Sorry, this command is only for admins"
bot_denied: "Sorry, I do not have \"{permission}\" permission in the channel to do that!"
channel_denied: "Sorry, this command is only available for those who have \"{permission}\" permission in the channel."
exception: "Seems like something went wrong :/\nPinging dev: <@431451036151185408>" #\n - new line; \t - tab
#Permissions
permissions:
  manage_roles: "Manage Roles"
  manage_webhooks: "Manage Webhooks"
  administrator: "Administrator"
  owner: "Owner"
#database
author_not_found: "For some reason you're not in my database, try to post a message at first."

moderation:
  context_report: "Report"
  desc: "Moderation commands"
  channel:
    desc: "Set the channel for receiving reports"
    success: "The channel has been successfuly set for receiving reports!"
  report:
    head: "Author: {author}\nOriginal message: {jump_url}\nPosted at: <t:{posted_at}:F>\n\n"
    content: "Content:\n>>>\n{reported_content}\n<<<\n\n"
    attach: "Attachments:\n{attachments}\n\n"
    embeds: "Embeds:\n"
    title: "Click here to jump to the message if not deleted"
    success: "The message has been successfuly reported!"

elections:
  desc: "Elections commands"
  system: "Congratulations! <@{elected_members}> have won the <@&role> election!"
  no_such_elections: "There's no elections for the specified role!"
  not_candidate: "{claimer} is not a claimer!"
  not_supporter: "You don't support {claimer} to unsupport them!"
  #role
  add:
    desc: "Open elections for the specified role"
    exists: "The role is already electable! If you wish to cancel elections for the role consider to use \"/elections delete\""
    success: "Here you go!"
  delete:
    desc: "Cancel elections for the specified role"
    success: "Here you go!"
    fail: "There's no elections for the specified role to cancel!"
  claim:
    desc: "Take participation in points race for the specified electable role"
    exists: "You already claim the role! If you wish to unclaim consider to use \"/elections unclaim\""
    success: "Here you go!"
  unclaim:
    desc: "Leave race for the specified role"
    success: "Here you go!"
    not_candidate: "You don't participate in race for the specified role to unclaim it!"
  support:
    desc: "Support the specified member who claims the role with your cloned points"
    exists: "You already support {claimer}!"
    success: "Here you go!"
  unsupport:
    desc: "Unsupport and takes away points from the specified member who claims the role"
    success: "Here you go!"
    fail: "You don't support {claimer} to unsupport them!"
  leaderboard:
    desc: ""
    embed:
      title: "{role} leaderboard"
      place: "No."
      claimers: "Claimers"
      share: "Share"

society:
  desc: "Commands to edit social points behaviour"
  add:
    desc: "Add social points to the specified member, negative values also do work!"
    success: "Added {amount} social credit to {member}"
  ignore:
    desc: "Make the bot ignore the channel, recommended for spam channels"
    success: "The bot won't count social credit in the channel now!"
  leaderboard:
    desc: "literally a leaderboard"
    proc: "Counting messages..."
    empty: "The leaderboard is empty, please try later."
    embed:
      title: "{guild} leaderboard"
      place: "No."
      members: "Members"
      points: "Points"
      summ: "Server value: {server_value}"
    success: "Here you go!"

#channel
channel:
  desc: "Channel related commands"
  sharecode:
    generated: "The code has been successfully generated: ```{shareCode}```\n Use \"/channel sharecode\" command to connect more channels to the network"
    exists: "The code is already set!"
    set: "The share code {shareCode} has been successfully set!"
    on_join: "{guild} #{channel} has joined the network!"
  shareCode_generate:
    success: "The code has been successfully generated: ```{shareCode}```\n Use /channel shareCode_set command to connect more channels to the network"
  shareCode_set:
    success: "The code has been successfully applied!"

####################################################################################################

#Minecraft
mc_ready: "The minecraft.py module is ready"
mc_status_embed_title: "[{edition} {version}]{ip} Server Status" #same as role_offset_success
mc_status_embed_online: ":green_circle:Online: {online}/{slots}" #^
mc_status_embed_offline: ":red_circle:Offline"
mc_status_embed_edition: "Edition"
mc_status_embed_ip: "Server IP"
mc_status_embed_players: "Players"
mc_notification: "{role} [{edition}]{ip} server is up!"
#Minecraft commands
addserver_desc: "Generates an embed message with mc server status. All fields are not case sensitive"
addserver_success: "Please wait for the next status update, usually it doesn't takes more than 1 minute."
#
setnotification_desc: "Sets channel for mc server status notifications"
setnotification_success: "Notifications for [{edition}]{ip} status set!"
setnotification_fail: "The channel already has notifications enabled for such server, please consider pinging one role instead of few."
#
stopnotification_desc: "Removes mc server status notifications for this channel."
stopnotification_success: "Success!"
stopnotification_fail: "Notification with specified paramaters not found!"

