#Main
bot_is_ready: "The bot is ready"
processing: "Processing..."
no_desc: "no_desc"
indev: "not done yet"
denied: "Sorry, this command is only for admins"
bot_denied: "Sorry, I do not have \"{permission}\" permission in the channel to do that!"
channel_denied: "Sorry, this command is only available for those who have \"{permission}\" permission in the channel."
exception: "Seems like something went wrong :/\nPinging dev: <@431451036151185408>" #\n - new line; \t - tab
#Permissions
manage_roles: "Manage Roles"
manage_webhooks: "Manage Webhooks"
administrator: "Administrator"
#database
author_not_found: "For some reason you're not in my database, try to post a message at first."
#Society
##MODERATION##
context_report: "Report"
moderation_desc: "Moderation commands"
reports_channel_desc: "Set the channel for receiving reports"
reports_channel_success: "The channel has been successfuly set for receiving reports!"
report_message_head: "Author: {author}\nOriginal message: {jump_url}\nPosted at: <t:{posted_at}:F>\n\n"
report_message_content: "Content:\n>>>\n{reported_content}\n<<<\n\n"
report_message_attach: "Attachments:\n{attachments}\n\n"
report_message_embeds: "Embeds:\n"
report_embed_title: "Click here to jump to the message if not deleted"
report_success: "The message has been successfuly reported!"
##ADMIN##
election_system: "Congratulations! <@{elected_members}> have won the <@&role> election!"
elections_not_candidate: "{claimer} is not a claimer!"
#role
elections_desc: "Elections commands"
elections_add_desc: "Open elections for the specified role"
elections_add_exists: "The role is already electable! If you wish to cancel elections for the role consider to use \"/elections delete\""
elections_add_success: "Here you go!"
#
elections_delete_desc: "Cancel elections for the specified role"
elections_delete_success: "Here you go!"
elections_delete_fail: "There's no elections for the specified role to cancel!"
#
elections_claim_desc: "Take participation in points race for the specified electable role"
elections_claim_exists: "You already claim the role! If you wish to unclaim consider to use \"/elections unclaim\""
elections_claim_success: "Here you go!"
#
elections_unclaim_desc: "Leave race for the specified role"
elections_unclaim_success: "Here you go!"
elections_unclaim_fail: "You don't participate in race for the specified role to unclaim it!"
#
elections_support_desc: "Support the specified member who claims the role with your cloned points"
elections_support_exists: "You already support {claimer}!"
elections_support_success: "Here you go!"
#
elections_unsupport_desc: "Unsupport and takes away points from the specified member who claims the role"
elections_unsupport_success: "Here you go!"
elections_unsupport_fail: "You don't support {claimer} to unsupport them!"
#Main commands
role_offset_desc: "please add this"
role_offset_success: "Now custom activity roles will be placed after {role_name} role" #{} are variables that are replaced during execution, it's ok to not include them
#
claimrole_desc: "Claim a custom role if you're very active or boosted the server!"
claimrole_a_!top: "Sorry, only top-10 active members of the server can claim a custom role!"
claimrole_a_success: "Here you go!"
claimrole_a_fail: "Sorry, only one activity role per member"
#
unclaimrole_desc: "Delete a claimed role if you don't want it or want to change it!"
unclaimrole_a_success: "Here you go!"
unclaimrole_a_fail: "You don't have an activity role to unclaim!"
#
leaderboard_desc: "literally a leaderboard"
leaderboard_proc: "Counting messages..."
leaderboard_empty: "The leaderboard is empty, please try later."
leaderboard_embed_title: "{guild} leaderboard"
leaderboard_embed_place: "No."
leaderboard_embed_members: "Members"
leaderboard_embed_points: "Points"
leaderboard_embed_sum: "Server value: {server_value}"
leaderboard_success: "Here you go!"

####################################################################################################

#Minecraft
mc_ready: "The minecraft.py module is ready"
mc_status_embed_title: "[{edition} {version}]{ip} Server Status" #same as role_offset_success
mc_status_embed_online: ":green_circle:Online: {online}/{slots}" #^
mc_status_embed_offline: ":red_circle:Offline"
mc_status_embed_edition: "Edition"
mc_status_embed_ip: "Server IP"
mc_status_embed_players: "Players"
mc_notification: "{role} [{edition}]{ip} server is up!"
#Minecraft commands
addserver_desc: "Generates an embed message with mc server status. All fields are not case sensitive"
addserver_success: "Please wait for the next status update, usually it doesn't takes more than 1 minute."
#
setnotification_desc: "Sets channel for mc server status notifications"
setnotification_success: "Notifications for [{edition}]{ip} status set!"
setnotification_fail: "The channel already has notifications enabled for such server, please consider pinging one role instead of few."
#
stopnotification_desc: "Removes mc server status notifications for this channel."
stopnotification_success: "Success!"
stopnotification_fail: "Notification with specified paramaters not found!"

